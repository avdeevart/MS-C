//by Survivor of the SAO & Master of the GEASS
//___________________________________________________________________________________________________________________________________
// // Задача 49: Задайте двумерный массив. Найдите элементы, у
// которых оба индекса нечётные, и замените эти элементы на их
// квадраты.
// Например, изначально массив
// выглядел вот так:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// Задача 51: Задайте двумерный массив. Найдите сумму
// элементов, находящихся на главной диагонали (с индексами
// (0,0); (1;1) и т.д.
// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
//===================================================================================================================================
//-----------------------------------------------------------------------------------------------------------------------------------
int GetDigitString(string txt)    // метод преобразует строку в число, при этом выводит задаваемый комментарий на консоль
{
    System.Console.Write(txt);  //вывод комментария на консоль
    return Convert.ToInt32(Console.ReadLine()); //вызов метода преобразования строки/целое число
}
//-----------------------------------------------------------------------------------------------------------------------------------
int[,] GnrtRndVlsFilling2DArray(int i_sizeArray, int j_sizeArray, int lowRND, int hightRND)    //объединяющий метод - создания массива по условию задачи
{
    var varArray = new int[i_sizeArray, j_sizeArray];   //создание массива заданной длины
    var randomValue = new Random(); //объявление рандомной переменной

    for (int i = 0; i < varArray.GetLength(0); i++) //GetLength(0)-метод, возращающий длину массива в первом("0") пространстве("i")
    {
        for (int j = 0; j < varArray.GetLength(1); j++)    //GetLength(1)-метод,возращающий длину массива во втором("1")пространстве("j")
        {
            varArray[i, j] = randomValue.Next(lowRND, hightRND + 1); //внимани 2-не входит в границу правого диапазона (n-1)
        }
    }
    return varArray;
}
//-----------------------------------------------------------------------------------------------------------------------------------
int[,] ReturnSQROddElements(int[,] sourceArray)    //метод, возращающий решение задачи№49
{
    for (int i = 1; i < sourceArray.GetLength(0); i = i + 2) //GetLength(0)-метод, возращающий длину массива в первом("0") пространстве("i")
    {
        for (int j = 1; j < sourceArray.GetLength(1); j = j + 2)    //GetLength(1)-метод,возращающий длину массива во втором("1")пространстве("j")
        {
            sourceArray[i, j] = Convert.ToInt16(Math.Pow(sourceArray[i, j], 2)); //выполнение условия задачи
        }
    }
    return sourceArray;
}
//-----------------------------------------------------------------------------------------------------------------------------------
int ReturnSumMainDiaganal(int[,] inputArray)    //метод, возращающий решение задачи№51
{
    int summ = 0;
    
    //использование тернального оператора
    //(если условие в скобках выполняется), тогда(?) присвоить "inputArray.GetLength(1)" иначе(:) "inputArray.GetLength(0)"
    int minSide = (inputArray.GetLength(0)>inputArray.GetLength(1))? inputArray.GetLength(1):inputArray.GetLength(0);
    //заменяет конструкцию if/else

    for (int t = 0; t < minSide; t++) //цикл перебора элементов массива по заданному условию
    {
        summ = summ + inputArray[t, t]; //выполнение условия задачи№51
    }
    return summ;
}
//-----------------------------------------------------------------------------------------------------------------------------------
void Display2DArray(int[,] myArray)  //метод выводящий содержимое 2D массива в сторку
{
    System.Console.WriteLine();

    for (int i = 0; i < myArray.GetLength(0); i++) //GetLength(0)-метод, возращающий длину массива в первом("0") пространстве("i")
    {
        for (int j = 0; j < myArray.GetLength(1); j++)    //GetLength(1)-метод,возращающий длину массива во втором("1")пространстве("j")
        {
            System.Console.Write(myArray[i, j] + "\t"); //использование табуляции для выравнивания вывода -("\t")
        }

        System.Console.WriteLine(); //пустая строка позволяет вывести построчно 
    }
}
//-----------------------------------------------------------------------------------------------------------------------------------
void DisplayAll()
{
    var workArray = GnrtRndVlsFilling2DArray(GetDigitString("Кол-во строк: "), GetDigitString("Кол-во столбцов: "), 0, 9);
    Display2DArray(workArray);  //сгенерированный массив

    Console.WriteLine();
    Console.WriteLine("Возвели в квадрат элементы с парой нечетных индексов:");
    Console.WriteLine();
    workArray = ReturnSQROddElements(workArray);  //измененный по условию зад№49
    Display2DArray(workArray);

    Console.WriteLine();
    Console.WriteLine(ReturnSumMainDiaganal(workArray));

}
//-----------------------------------------------------------------------------------------------------------------------------------

DisplayAll();
